require 'io'
require 'os'
require 'iterators'

require 'server'
require 'lib.cjson'
require 'utils.rpc'
require 'utils.response'
require 'utils.logger'

logger.init()

local stdin: string
local documents: hashmap(string, string)
local current_file: string
local current_uri: string

local root_uri_prog = io.popen("git rev-parse --show-toplevel")
local root_uri: string = root_uri_prog:read()


while true do
	stdin = stdin .. io.read(1)
	
	local request, content_len, err = rpc.decode(stdin)
	if err == "" then
		local request_method_obj = cJSON_GetObjectItem(request, "method") 
		local request_method = request_method_obj.valuestring
		local request_id_obj = cJSON_GetObjectItem(request, "id") 
		local request_id: integer
		if cJSON_IsNumber(request_id_obj) == 1 then
			request_id = request_id_obj.valueint
		end
		local request_params = cJSON_GetObjectItem(request, "params") 
		local request_text_document = cJSON_GetObjectItem(request_params , "textDocument") 
		local text_document_uri = cJSON_GetObjectItem(request_text_document, "uri") 
		if cJSON_IsString(text_document_uri) == 1 then
			current_uri = text_document_uri.valuestring
		end

		logger.log("Method: " .. request_method)

		if request_method == "initialize" then
			server.initialize(request_id)
		end

		if request_method == "textDocument/didOpen" then
			server.did_open(root_uri, current_uri, current_file, documents)
		end

		if request_method == "textDocument/didClose" then
			server.did_close(documents, current_uri)
		end

		if request_method == "textDocument/didChange" then
			server.did_change(documents, request_params)
		end

		if request_method == "textDocument/hover" then
			server.hover(request_id)
		end

		if request_method == "textDocument/definition" then
			server.go_to_definition(root_uri, request_params, request_id, documents, current_uri, current_file)
		end

		if request_method == "textDocument/completion" then
			server.completion(request_id)
		end
	
		if request_method == "shutdown" then
			server.shutdown()
		end

		stdin = ""
	end
end
