require 'io'
require 'os'

require 'utils.logger'
require 'utils.response'
local analyze_ast = require 'utils.analyze_ast'

local function hover(
	documents: hashmap(string, string),
	request_id: integer,
	current_uri: string,
	current_file_path: string,
	current_file: string,
	current_line: integer,
	current_char: integer,
	parse_err: boolean
)

	if parse_err then
		goto type_found
	end

	if documents:peek(current_uri) ~= nilptr then
		current_file = documents[current_uri]
	end

	local content: string

	local line_num = 0
	for line in current_file:gmatch("[^\n]-\n") do
		if line_num == current_line then
			local identifier_find_start: integer
			for identifier in line:gmatch("%f[%w_]([%w_]+)%f[^%w_]") do
				local identifier_matched, identifier_seq = line:match("%f[%w_]" .. identifier .. "%f[^%w_]")
				local identifier_start = line:find("%f[%w_]" .. identifier_seq[1] .. "%f[^%w_]", identifier_find_start) - 1
				identifier_find_start = identifier_start + #identifier
        local identifier_end = identifier_start + #identifier_seq[1] - 1  

				if current_char >= identifier_start and current_char <= identifier_end then
					local block = analyze_ast(current_file, current_file_path, identifier)
					if block.attr["type"] ~= "" then
						content = identifier .. "\n\n**Type**:\n```nelua\n" .. block.attr["type"] .. "\n```"
					end
					goto type_found
				end
			end
		end
		line_num = line_num + 1
	end
	::type_found::
	local hover_response = response.hover(request_id, content)
	io.write(hover_response)
	io.flush()
end

return hover
